! function() {
    var a = {},
        b = function(b) {
            for (var c = a[b], e = c.deps, f = c.defn, g = e.length, h = new Array(g), i = 0; i < g; ++i) h[i] = d(e[i]);
            var j = f.apply(null, h);
            if (void 0 === j) throw "module [" + b + "] returned undefined";
            c.instance = j
        },
        c = function(b, c, d) {
            if ("string" != typeof b) throw "module id must be a string";
            if (void 0 === c) throw "no dependencies for " + b;
            if (void 0 === d) throw "no definition function for " + b;
            a[b] = {
                deps: c,
                defn: d,
                instance: void 0
            }
        },
        d = function(c) {
            var d = a[c];
            if (void 0 === d) throw "module [" + c + "] was undefined";
            return void 0 === d.instance && b(c), d.instance
        },
        e = function(a, b) {
            for (var c = a.length, e = new Array(c), f = 0; f < c; ++f) e.push(d(a[f]));
            b.apply(null, b)
        },
        f = {};
    f.bolt = {
        module: {
            api: {
                define: c,
                require: e,
                demand: d
            }
        }
    };
    var g = c,
        h = function(a, b) {
            g(a, [], function() {
                return b
            })
        };
    h("7", tinymce.util.Tools.resolve)
       , g("1", ["7"], function(a) {
        return a("tinymce.PluginManager")
    }), g("2", [], function() {
       // HTML型のリッチテキストを確認
        function a(a) {
            return a && a.id === 'value_2301';
        }
        // HTMLアンエスケープ
        function b(str) {
          return str
            .replace(/(&lt;)/g, '<')
            .replace(/(&gt;)/g, '>')
            .replace(/(&quot;)/g, '"')
            .replace(/(&#39;)/g, "'")
            .replace(/(&amp;)/g, '&');
        }
        return { isHtmlRubyCode: a, unEscapeHTML: b }
    }), g("0", ["1", "2"], function(pluginManager, utils) {
        utils.isHtmlRubyCode;
        return pluginManager.add("html_ruby_code", function(editor) {
                function m(a) {
                     a.content = utils.unEscapeHTML(a.content);
                }
                // 改行でpタグが出なくてbrタグになる
                function n() {
                    utils.isHtmlRubyCode(editor) &&
                            ( editor.settings.forced_root_block = false , force_br_newlines = true);
                }
                editor.on("GetContent", m);
                editor.on('PreInit', n);
            }),
            function() {}
    }), d("0")()
}();